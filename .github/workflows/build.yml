name: Build libs

on:
    push:
      branches:
        - 'master'

jobs:
    openssl-checkout:
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: 'recursive'
        # - name: Patch sources
        #   run: |
        #     cd FFmpeg
        #     find ../patches/ffmpeg -type f -name '*.patch' -print0 | sort -z | xargs -t -0 -n 1 patch -i
        - name: Cleanup and pack
          run: |
              rm -rf openssl/.git*
              rm -rf FFmpeg/.git*
              tar -C openssl -czf openssl.tar.gz .
              tar -C FFmpeg -czf ffmpeg.tar.gz .
        - name: Store OpenSSL libraries
          uses: actions/upload-artifact@v3
          with:
            name: openssl.tar.gz
            path: openssl.tar.gz
        - name: Store FFmpeg libraries
          uses: actions/upload-artifact@v3
          with:
            name: ffmpeg.tar.gz
            path: ffmpeg.tar.gz

    build-ios:
      runs-on: macos-12
      needs: [openssl-checkout]
      strategy:
        matrix:
          target: ["ios-arm64", "ios-x86-64" ]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: 'false'
        - name: Download OpenSSL
          uses: actions/download-artifact@v3
          with:
            name: openssl.tar.gz
        - name: Download FFmpeg
          uses: actions/download-artifact@v3
          with:
            name: ffmpeg.tar.gz
        - name: Unpack sources
          run: |
            mv openssl.tar.gz openssl/
            mv ffmpeg.tar.gz FFmpeg/
            cd openssl
            tar -xf openssl.tar.gz
            cd ../FFmpeg
            tar -xf ffmpeg.tar.gz
        - name: Building
          run: |
            bash -x build_app.sh ${{matrix.target}}
        - name: Store build artifacts
          uses: actions/upload-artifact@v3
          with:
            name: libs-${{matrix.target}}.tar.gz
            path: libs-${{matrix.target}}.tar.gz


    build-android:
      runs-on: ubuntu-22.04
      needs: [openssl-checkout]
      strategy:
        matrix:
          target: [ "android-arm64-v8a", "android-aarmeabi-v7a", "android-x86_64" ]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: 'false'
        - name: Download OpenSSL
          uses: actions/download-artifact@v3
          with:
            name: openssl.tar.gz
        - name: Download FFmpeg
          uses: actions/download-artifact@v3
          with:
            name: ffmpeg.tar.gz
        - name: Unpack sources
          run: |
            mv openssl.tar.gz openssl/
            mv ffmpeg.tar.gz FFmpeg/
            cd openssl
            tar -xf openssl.tar.gz
            cd ../FFmpeg
            tar -xf ffmpeg.tar.gz
        - name: Building
          run: |
            bash -x build_app.sh ${{matrix.target}}
        - name: Store build artifacts
          uses: actions/upload-artifact@v3
          with:
            name: libs-${{matrix.target}}.tar.gz
            path: libs-${{matrix.target}}.tar.gz
