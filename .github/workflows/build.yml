name: Build libs


on:
    push:
      branches:
        - 'master'

jobs:
    openssl-checkout:
        runs-on: macos-12
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              submodules: 'recursive'
          - name: Cleanup and pack
            run: |
                rm -rf openssl/.git*
                rm -rf FFmpeg/.git*
                tar -C openssl -czf openssl.tar.gz .
                tar -C FFmpeg -czf ffmpeg.tar.gz .
          - name: Store OpenSSL libraries
            uses: actions/upload-artifact@v3
            with:
              name: openssl.tar.gz
              path: openssl.tar.gz
          - name: Store FFmpeg libraries
            uses: actions/upload-artifact@v3
            with:
              name: ffmpeg.tar.gz
              path: ffmpeg.tar.gz


    # build-openssl-ios:
    #   runs-on: macos-12
    #   needs: [openssl-checkout]
    #   strategy:
    #     matrix:
    #       target: ["ios-arm64"]
    #       # target: ["ios-arm64", "ios-x86-64"]
    #   steps:
    #     - name: Checkout
    #       uses: actions/checkout@v4
    #       with:
    #         submodules: 'false'
    #     - name: Download OpenSSL
    #       uses: actions/download-artifact@v3
    #       with:
    #         name: openssl.tar.gz
    #     - name: Unpack sources
    #       run: |
    #         mv openssl.tar.gz openssl/
    #         cd openssl
    #         tar -xf openssl.tar.gz
    #     - name: Building
    #       run: |
    #         sh build_openssl.sh `pwd`/openssl ${{matrix.target}}
    #         tar -C openssl -czf openssl-${{matrix.target}}.tar.gz libssl.a libcrypto.a
    #     - name: Store libraries
    #       uses: actions/upload-artifact@v3
    #       with:
    #         name: openssl-${{matrix.target}}.tar.gz
    #         path: openssl-${{matrix.target}}.tar.gz

    build-ffmpeg:
        runs-on: macos-12
        # needs: [build-openssl-ios]
        needs: [openssl-checkout]
        strategy:
          matrix:
            target: ["ios-arm64"]
        steps:
          - uses: actions/checkout@v4
            with:
              submodules: 'false'
          - name: Download OpenSSL source
            uses: actions/download-artifact@v3
            with:
              name: openssl.tar.gz
          # - name: Download OpenSSL libs
          #   uses: actions/download-artifact@v3
          #   with:
          #     name: openssl-${{matrix.target}}.tar.gz
          - name: Download FFmpeg  source
            uses: actions/download-artifact@v3
            with:
              name: ffmpeg.tar.gz
          - name: Unpack sources
            run: |
              # mv openssl.tar.gz openssl/
              # mv openssl-${{matrix.target}}.tar.gz openssl/
              mv ffmpeg.tar.gz FFmpeg/
              # cd openssl
              # tar -xf openssl.tar.gz
              # tar -xf openssl-${{matrix.target}}.tar.gz
              # cd ../FFmpeg
              cd ./FFmpeg
              tar -xf ffmpeg.tar.gz
          - name: Prepare environment
            run: |
              brew install nasm
              chmod +x ./tools/gas-preprocessor.pl
              export PATH=$PATH:`pwd`/tools
          - name: Build
            run: |
              sh -x build_ffmpeg.sh `pwd`/FFmpeg `pwd`/openssl ${{matrix.target}}
              tar -C FFmpeg -czf ffmpeg-${{matrix.target}}.tar.gz ./build
          - name: Store libraries
            uses: actions/upload-artifact@v3
            with:
              name: ffmpeg-${{matrix.target}}.tar.gz
              path: ffmpeg-${{matrix.target}}.tar.gz

    # build-openssl-arm64-v8a:
    # build-openssl-armeabi-v7a:
    # build-openssl-x86-64:
    # build-ffmpeg-ios-x86-64:
    # build-ffmpeg-arm64-v8a:
    # build-ffmpeg-armeabi-v7a:
